/# Generated by Cargo
# Will have compiled files and executables
/target/

# These are backup files generated by rustfmt
**/*.rs.bk

# End of line correction by IntelliJ-based editors
/.idea/

# Environment variable overrides for Cargo
.env

# RLS (Rust Language Server) data
rls/

# Dependency directories (remove if using a workspace or non-standard path)
CMakeLists.txt
Makefile

# Files generated by `cargo doc`
/doc/

# Files generated by `cargo package`
.cargo_vcs_info.json

# Files generated by `cargo publish`
.publish

# Files generated by `cargo new` or other cargo subcommands
.vcs_info.json

# Coverage data generated by tools like `cargo tarpaulin`
/coverage/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

venv/
python/venv/
